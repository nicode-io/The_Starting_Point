{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nicode/Development/Projects/Github/ReactNative_Cursus/02-NumberGuesser/screens/GameOver.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Card from \"../components/Card\";\nimport Colors from \"../constants/colors\";\nimport Number from \"../components/Number\";\nimport TitleText from \"../components/Text/TitleText\";\nimport BodyText from \"../components/Text/BodyText\";\n\nvar GameOver = function GameOver(props) {\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/images/success.png\"),\n    style: styles.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }), React.createElement(Card, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, React.createElement(TitleText, {\n    style: _objectSpread({}, props.style),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, \"The game is over !\"), React.createElement(BodyText, {\n    style: _objectSpread({}, props.style),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, \"Your Number was: \", props.userNumber), React.createElement(BodyText, {\n    style: _objectSpread({}, props.style),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, \"Computer rounds :\"), React.createElement(Number, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, props.rounds), React.createElement(BodyText, {\n    style: _objectSpread({}, props.style),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, \"to find your number\")), React.createElement(Card, {\n    style: styles.replayContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Play Again\",\n    onPress: props.onStartNewGame,\n    color: Colors.yellow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  image: {\n    zIndex: 99\n  },\n  container: {\n    width: 300,\n    maxWidth: '80%',\n    marginVertical: 30,\n    backgroundColor: Colors.fuchsia\n  },\n  replayContainer: {\n    width: 300,\n    maxWidth: '60%',\n    marginVertical: 10,\n    backgroundColor: Colors.fuchsia\n  }\n});\nexport default GameOver;","map":{"version":3,"sources":["/Users/nicode/Development/Projects/Github/ReactNative_Cursus/02-NumberGuesser/screens/GameOver.js"],"names":["React","Card","Colors","Number","TitleText","BodyText","GameOver","props","styles","screen","require","image","container","style","userNumber","rounds","replayContainer","onStartNewGame","yellow","StyleSheet","create","flex","alignItems","justifyContent","zIndex","width","maxWidth","marginVertical","backgroundColor","fuchsia"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAGA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACtB,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEC,OAAO,gCAAtB;AAAwD,IAAA,KAAK,EAAEF,MAAM,CAACG,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,KAAK,oBAAML,KAAK,CAACM,KAAZ,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,QAAD;AAAU,IAAA,KAAK,oBAAMN,KAAK,CAACM,KAAZ,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAqDN,KAAK,CAACO,UAA3D,CAFJ,EAGI,oBAAC,QAAD;AAAU,IAAA,KAAK,oBAAMP,KAAK,CAACM,KAAZ,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHJ,EAII,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASN,KAAK,CAACQ,MAAf,CAJJ,EAKI,oBAAC,QAAD;AAAU,IAAA,KAAK,oBAAMR,KAAK,CAACM,KAAZ,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BALJ,CAFJ,EASI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACQ,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,YADV;AAEI,IAAA,OAAO,EAAET,KAAK,CAACU,cAFnB;AAGI,IAAA,KAAK,EAAEf,MAAM,CAACgB,MAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATJ,CADJ;AAmBH,CApBD;;AAsBA,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC7BX,EAAAA,MAAM,EAAE;AACJY,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,UAAU,EAAE,QAFR;AAGJC,IAAAA,cAAc,EAAE;AAHZ,GADqB;AAM7BZ,EAAAA,KAAK,EAAE;AACLa,IAAAA,MAAM,EAAE;AADH,GANsB;AAS7BZ,EAAAA,SAAS,EAAE;AACPa,IAAAA,KAAK,EAAE,GADA;AAEPC,IAAAA,QAAQ,EAAE,KAFH;AAGPC,IAAAA,cAAc,EAAE,EAHT;AAIPC,IAAAA,eAAe,EAAE1B,MAAM,CAAC2B;AAJjB,GATkB;AAe7Bb,EAAAA,eAAe,EAAE;AACbS,IAAAA,KAAK,EAAE,GADM;AAEbC,IAAAA,QAAQ,EAAE,KAFG;AAGbC,IAAAA,cAAc,EAAE,EAHH;AAIbC,IAAAA,eAAe,EAAE1B,MAAM,CAAC2B;AAJX;AAfY,CAAlB,CAAf;AAuBA,eAAevB,QAAf","sourcesContent":["import React from \"react\";\nimport {Button, Image, ScrollView, StyleSheet, Text, View} from \"react-native\";\n\nimport Card from \"../components/Card\";\nimport Colors from \"../constants/colors\";\nimport Number from \"../components/Number\";\nimport TitleText from \"../components/Text/TitleText\";\nimport BodyText from \"../components/Text/BodyText\";\n\nconst GameOver = props => {\n    return (\n        <View style={styles.screen}>\n            <Image source={require('../assets/images/success.png')} style={styles.image}/>\n            <Card style={styles.container}>\n                <TitleText style={{...props.style}}>The game is over !</TitleText>\n                <BodyText style={{...props.style}}>Your Number was: {props.userNumber}</BodyText>\n                <BodyText style={{...props.style}}>Computer rounds :</BodyText>\n                <Number>{props.rounds}</Number>\n                <BodyText style={{...props.style}}>to find your number</BodyText>\n            </Card>\n            <Card style={styles.replayContainer}>\n                <Button\n                    title=\"Play Again\"\n                    onPress={props.onStartNewGame}\n                    color={Colors.yellow}\n                />\n            </Card>\n        </View>\n    )\n};\n\nconst styles = StyleSheet.create({\n    screen: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n    },\n    image: {\n      zIndex: 99\n    },\n    container: {\n        width: 300,\n        maxWidth: '80%',\n        marginVertical: 30,\n        backgroundColor: Colors.fuchsia,\n    },\n    replayContainer: {\n        width: 300,\n        maxWidth: '60%',\n        marginVertical: 10,\n        backgroundColor: Colors.fuchsia,\n    }\n});\n\nexport default GameOver\n"]},"metadata":{},"sourceType":"module"}